# This is a basic workflow to help you get started with Actions
name: prod-sample

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  create:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  build-setup:
    environment: build-setup
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: clone kernel
        run: |
          git clone --branch linux-6.1.y --depth=1 https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          cd linux && for i in $GITHUB_WORKSPACE/patch/*.patch; do patch -p1 < $i; done  
          sudo apt install flex bison build-essential zstd gcc bc libssl-dev libncurses5-dev libelf-dev
      #build toucpad fixes deb
      - name: build touchpad fix deb
        run: |           
          dpkg-deb --build --root-owner-group acer-chromebook-fixes_0.0.1-1_amd64
  

  build:
    environment: build
    needs: build-setup
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [atom, generic] 
    steps:

      # Runs a set of commands using the runners shell
      - name: set config and build
        run: |
          python3 kversion.py
          cd linux 
          cp $GITHUB_WORKSPACE/config6.1${{ matrix.arch }} .config
          make olddefconfig
          time make -j$(nproc) bindeb-pkg LOCALVERSION=${{ matrix.arch }}
          python3 ../kversion.py cp
          cd ../

# do some version tracking
      - name: add control files to grepo
        run: |
          git fetch
          git checkout main
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add version
          git commit -m "update version"
          git push
#publish release
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: /home/runner/work/Gkernel/Gkernel/*.deb

#upload artifact             
      - uses: actions/upload-artifact@v3
        with:
          name: Gkernel build
          path: /home/runner/work/Gkernel/Gkernel/*.deb

